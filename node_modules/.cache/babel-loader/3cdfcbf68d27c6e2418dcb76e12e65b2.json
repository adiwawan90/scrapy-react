{"ast":null,"code":"var _jsxFileName = \"/home/adi/Documents/SCRAP-React/src/test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate'; // import Hasil from './Hasil'\n\nimport './App.css';\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData();\n      });\n    };\n\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 10,\n      currentPage: 0\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  receivedData() {\n    axios.get(`https://storage.scrapinghub.com/items/427748?apikey=470eb897efea4b36976d4989cc77c7e0&format=json`).then(res => {\n      const data = res.data; // console.log(res.data);\n\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage); // const postData = slice.map(pd => (\n      //   <React.Fragment>\n      //   <div className=\"container\">\n      //       <div className=\"row\">\n      //       <div className=\"col-md-4 top\">\n      //             <div className=\"card\">\n      //                 <img className=\"card-img-top shop-item-image\" src={pd.image} alt=\"Card cap\"/>\n      //                 <div className=\"card-body\">\n      //                   <h5 className=\"card-title shop-item-title\">{pd.title}</h5>\n      //                   <span className=\"shop-item-price\">{pd.price}</span>\n      //                   {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n      //                   <button className=\"btn btn-primary shop-item-button\" type=\"button\">ADD TO CHART</button>\n      //                 </div>\n      //             </div>\n      //         </div>\n      //       </div>\n      //   </div>\n      //   </React.Fragment>\n      // ));\n\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage),\n        //   postData\n        slice\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.receivedData();\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.slice.map((data, index) => {\n      return React.createElement(\"div\", {\n        className: \"col-md-4 top\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-img-top shop-item-image\",\n        src: data.image,\n        alt: \"Card cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title shop-item-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, data.title), React.createElement(\"span\", {\n        className: \"shop-item-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, data.price), React.createElement(\"button\", {\n        className: \"btn btn-primary shop-item-button\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"ADD TO CHART\"))));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ReactPaginate, {\n      previousLabel: 'prev',\n      nextLabel: 'next',\n      breakLabel: '...',\n      breakClassName: 'break-me',\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.handlePageClick,\n      containerClassName: 'pagination',\n      subContainerClassName: 'pages pagination',\n      activeClassName: 'active',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/adi/Documents/SCRAP-React/src/test.js"],"names":["React","Component","axios","ReactPaginate","Test","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","receivedData","data","bind","get","then","res","slice","pageCount","Math","ceil","length","componentDidMount","render","console","log","map","index","image","title","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\n// import Hasil from './Hasil'\nimport './App.css';\n\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 10,\n      currentPage: 0\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n  receivedData() {\n    axios\n      .get(\n        `https://storage.scrapinghub.com/items/427748?apikey=470eb897efea4b36976d4989cc77c7e0&format=json`\n      )\n      .then(res => {\n        const data = res.data;\n        // console.log(res.data);\n        const slice = data.slice(\n          this.state.offset,\n          this.state.offset + this.state.perPage\n        );\n        // const postData = slice.map(pd => (\n        //   <React.Fragment>\n        //   <div className=\"container\">\n        //       <div className=\"row\">\n        //       <div className=\"col-md-4 top\">\n        //             <div className=\"card\">\n        //                 <img className=\"card-img-top shop-item-image\" src={pd.image} alt=\"Card cap\"/>\n        //                 <div className=\"card-body\">\n        //                   <h5 className=\"card-title shop-item-title\">{pd.title}</h5>\n        //                   <span className=\"shop-item-price\">{pd.price}</span>\n        //                   {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n        //                   <button className=\"btn btn-primary shop-item-button\" type=\"button\">ADD TO CHART</button>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //       </div>\n        //   </div>\n        //   </React.Fragment>\n        // ));\n\n        this.setState({\n          pageCount: Math.ceil(data.length / this.state.perPage),\n        //   postData\n            slice\n        });\n      });\n  }\n  handlePageClick = e => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState(\n      {\n        currentPage: selectedPage,\n        offset: offset\n      },\n      () => {\n        this.receivedData();\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.receivedData();\n  }\n  render() {\n      console.log(this.state)\n    return (\n        <div className=\"container\">\n        <div className=\"row\">\n        {this.slice.map((data, index) => {\n          return (\n                <div className=\"col-md-4 top\" key={index}>\n                    <div className=\"card\">\n                        <img className=\"card-img-top shop-item-image\" src={data.image} alt=\"Card cap\"/>\n                        <div className=\"card-body\">\n                          <h5 className=\"card-title shop-item-title\">{data.title}</h5>\n                          <span className=\"shop-item-price\">{data.price}</span>\n                          {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                          <button className=\"btn btn-primary shop-item-button\" type=\"button\">ADD TO CHART</button>\n                        </div>\n                    </div>\n                </div>\n          );\n        })}\n        </div>\n      <div>\n        {/* {this.state.postData} */}\n        <ReactPaginate\n          previousLabel={'prev'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={this.state.pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageClick}\n          containerClassName={'pagination'}\n          subContainerClassName={'pages pagination'}\n          activeClassName={'active'}\n        />\n      </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}