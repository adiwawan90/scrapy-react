{"ast":null,"code":"import _objectSpread from \"/home/adi/Documents/SCRAP-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/adi/Documents/SCRAP-React/src/DataScrap.js\";\nimport React from 'react';\nimport paginate from 'paginate-array'; // import axios from 'axios';\n\nclass Datascrap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datas: [],\n      errors: null,\n      size: 5,\n      page: 1,\n      currPage: null\n    };\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/crawl.json?start_requests=true&spider_name=babastudio').then(response => response.json()).then(datas => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            size = _this$state.size;\n      const currPage = paginate(datas, page, size); //console.log(JSON.stringify(datas))\n      //do your logic here\n      //let datas = datas.items\n\n      this.setState(_objectSpread({}, this.state, {\n        datas,\n        currPage\n      })); //this is an asynchronous function\n    });\n  }\n\n  previousPage() {\n    const _this$state2 = this.state,\n          currPage = _this$state2.currPage,\n          page = _this$state2.page,\n          size = _this$state2.size,\n          datas = _this$state2.datas;\n\n    if (page > 1) {\n      const newPage = page - 1;\n      const newCurrPage = paginate(datas, newPage, size);\n      this.setState(_objectSpread({}, this.state, {\n        page: newPage,\n        currPage: newCurrPage\n      }));\n    }\n  }\n\n  nextPage() {\n    const _this$state3 = this.state,\n          currPage = _this$state3.currPage,\n          page = _this$state3.page,\n          size = _this$state3.size,\n          datas = _this$state3.datas;\n\n    if (page < 5) {\n      const newPage = page + 1;\n      const newCurrPage = paginate(datas, newPage, size);\n      this.setState(_objectSpread({}, this.state, {\n        page: newPage,\n        currPage: newCurrPage\n      }));\n    }\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          page = _this$state4.page,\n          size = _this$state4.size,\n          currPage = _this$state4.currPage;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"page: \", page), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"size: \", size), this.state.datas.map((data, index) => {\n      return React.createElement(\"div\", {\n        className: \"col-md-4 top\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-img-top shop-item-image\",\n        src: data.image,\n        alt: \"Card image cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title shop-item-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, data.title), React.createElement(\"span\", {\n        className: \"shop-item-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, data.price), React.createElement(\"button\", {\n        className: \"btn btn-primary shop-item-button\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"ADD TO CHART\"))));\n    }), React.createElement(\"button\", {\n      onClick: this.previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Previous Page\"), React.createElement(\"button\", {\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Next Page\")));\n  }\n\n}\n\nexport default Datascrap;","map":{"version":3,"sources":["/home/adi/Documents/SCRAP-React/src/DataScrap.js"],"names":["React","paginate","Datascrap","Component","constructor","props","state","datas","errors","size","page","currPage","previousPage","bind","nextPage","componentDidMount","fetch","then","response","json","setState","newPage","newCurrPage","render","map","data","index","image","title","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,IAFG;AAGXC,MAAAA,IAAI,EAAE,CAHK;AAIXC,MAAAA,IAAI,EAAE,CAJK;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,6EADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQV,KAAK,IAAI;AAAA,0BACU,KAAKD,KADf;AAAA,YACLI,IADK,eACLA,IADK;AAAA,YACCD,IADD,eACCA,IADD;AAEb,YAAME,QAAQ,GAAGV,QAAQ,CAACM,KAAD,EAAQG,IAAR,EAAcD,IAAd,CAAzB,CAFa,CAGb;AACA;AACA;;AACA,WAAKW,QAAL,mBACK,KAAKd,KADV;AAEEC,QAAAA,KAFF;AAGEI,QAAAA;AAHF,UANa,CAUT;AACL,KAfH;AAgBD;;AAEDC,EAAAA,YAAY,GAAG;AAAA,yBAC2B,KAAKN,KADhC;AAAA,UACLK,QADK,gBACLA,QADK;AAAA,UACKD,IADL,gBACKA,IADL;AAAA,UACWD,IADX,gBACWA,IADX;AAAA,UACiBF,KADjB,gBACiBA,KADjB;;AAGb,QAAIG,IAAI,GAAG,CAAX,EAAc;AACZ,YAAMW,OAAO,GAAGX,IAAI,GAAG,CAAvB;AACA,YAAMY,WAAW,GAAGrB,QAAQ,CAACM,KAAD,EAAQc,OAAR,EAAiBZ,IAAjB,CAA5B;AAEA,WAAKW,QAAL,mBACK,KAAKd,KADV;AAEEI,QAAAA,IAAI,EAAEW,OAFR;AAGEV,QAAAA,QAAQ,EAAEW;AAHZ;AAKD;AACF;;AAEDR,EAAAA,QAAQ,GAAG;AAAA,yBAC+B,KAAKR,KADpC;AAAA,UACDK,QADC,gBACDA,QADC;AAAA,UACSD,IADT,gBACSA,IADT;AAAA,UACeD,IADf,gBACeA,IADf;AAAA,UACqBF,KADrB,gBACqBA,KADrB;;AAGT,QAAIG,IAAI,GAAG,CAAX,EAAc;AACZ,YAAMW,OAAO,GAAGX,IAAI,GAAG,CAAvB;AACA,YAAMY,WAAW,GAAGrB,QAAQ,CAACM,KAAD,EAAQc,OAAR,EAAiBZ,IAAjB,CAA5B;AACA,WAAKW,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BI,QAAAA,IAAI,EAAEW,OAArC;AAA8CV,QAAAA,QAAQ,EAAEW;AAAxD;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBAC0B,KAAKjB,KAD/B;AAAA,UACCI,IADD,gBACCA,IADD;AAAA,UACOD,IADP,gBACOA,IADP;AAAA,UACaE,QADb,gBACaA,QADb;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYD,IAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYD,IAAZ,CAFF,EAGG,KAAKH,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,GAAG,EAAED,IAAI,CAACE,KAFZ;AAGE,QAAA,GAAG,EAAC,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CF,IAAI,CAACG,KAAjD,CADF,EAEE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCH,IAAI,CAACI,KAAxC,CAFF,EAIE;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CANF,CADF,CADF;AAsBD,KAvBA,CAHH,EA2BE;AAAQ,MAAA,OAAO,EAAE,KAAKjB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA3BF,EA4BE;AAAQ,MAAA,OAAO,EAAE,KAAKE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5BF,CADF,CADF;AAkCD;;AAhGqC;;AAmGxC,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport paginate from 'paginate-array';\n// import axios from 'axios';\n\nclass Datascrap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datas: [],\n      errors: null,\n      size: 5,\n      page: 1,\n      currPage: null\n    };\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\n      'http://localhost:4000/crawl.json?start_requests=true&spider_name=babastudio'\n    )\n      .then(response => response.json())\n      .then(datas => {\n        const { page, size } = this.state;\n        const currPage = paginate(datas, page, size);\n        //console.log(JSON.stringify(datas))\n        //do your logic here\n        //let datas = datas.items\n        this.setState({\n          ...this.state,\n          datas,\n          currPage\n        }); //this is an asynchronous function\n      });\n  }\n\n  previousPage() {\n    const { currPage, page, size, datas } = this.state;\n\n    if (page > 1) {\n      const newPage = page - 1;\n      const newCurrPage = paginate(datas, newPage, size);\n\n      this.setState({\n        ...this.state,\n        page: newPage,\n        currPage: newCurrPage\n      });\n    }\n  }\n\n  nextPage() {\n    const { currPage, page, size, datas } = this.state;\n\n    if (page < 5) {\n      const newPage = page + 1;\n      const newCurrPage = paginate(datas, newPage, size);\n      this.setState({ ...this.state, page: newPage, currPage: newCurrPage });\n    }\n  }\n\n  render() {\n    const { page, size, currPage } = this.state;\n\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div>page: {page}</div>\n          <div>size: {size}</div>\n          {this.state.datas.map((data, index) => {\n            return (\n              <div className='col-md-4 top' key={index}>\n                <div className='card'>\n                  <img\n                    className='card-img-top shop-item-image'\n                    src={data.image}\n                    alt='Card image cap'\n                  />\n                  <div className='card-body'>\n                    <h5 className='card-title shop-item-title'>{data.title}</h5>\n                    <span className='shop-item-price'>{data.price}</span>\n                    {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                    <button\n                      className='btn btn-primary shop-item-button'\n                      type='button'\n                    >\n                      ADD TO CHART\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <button onClick={this.previousPage}>Previous Page</button>\n          <button onClick={this.nextPage}>Next Page</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Datascrap;\n"]},"metadata":{},"sourceType":"module"}