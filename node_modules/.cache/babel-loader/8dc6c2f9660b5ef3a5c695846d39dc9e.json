{"ast":null,"code":"var _jsxFileName = \"/home/adi/Documents/SCRAP-React/src/test.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate'; // import Hasil from './Hasil'\n\nimport './App.css';\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData();\n      });\n    };\n\n    this.formatCurrency = num => {\n      var hasil = '';\n      num = num.toString().replace(/\\Rp|/g, '');\n      if (isNaN(num)) num = '0';\n      var sign = num === (num = Math.abs(num));\n      num = Math.floor(num * 100 + 0.50000000001);\n      var cents = num % 100;\n      num = Math.floor(num / 100).toString();\n      if (cents < 10) cents = '0' + cents;\n\n      for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) num = num.substring(0, num.length - (4 * i + 3)) + '.' + num.substring(num.length - (4 * i + 3));\n\n      return hasil = num;\n    };\n\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 8,\n      currentPage: 0\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  receivedData() {\n    axios.get(`https://storage.scrapinghub.com/items/427748?apikey=470eb897efea4b36976d4989cc77c7e0&format=json`).then(res => {\n      const data = res.data; // console.log(res.data);\n\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n      const postData = slice.map(pd => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card scrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-img-top shop-item-image\",\n        src: pd.image,\n        alt: \"Card cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title shop-item-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, pd.title), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"EXPLORE NOW\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"shop-item-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, ' ', React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Rp. \", this.formatCurrency(pd.price)), ' ')))))));\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage),\n        postData\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.receivedData();\n  }\n\n  render() {\n    //   console.log(this.state)\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.postData), React.createElement(\"div\", {\n      className: \"paginate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(ReactPaginate, {\n      previousLabel: 'prev',\n      nextLabel: 'next',\n      breakLabel: '...',\n      breakClassName: 'page-item',\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 5,\n      pageRangeDisplayed: 5,\n      onPageChange: this.handlePageClick,\n      containerClassName: 'pagination',\n      subContainerClassName: 'pages pagination',\n      activeClassName: 'active' //\n      // breakClassName={'page-item'}\n      ,\n      breakLinkClassName: 'page-link' // containerClassName={'pagination'}\n      ,\n      pageClassName: 'page-item',\n      pageLinkClassName: 'page-link',\n      previousClassName: 'page-item',\n      previousLinkClassName: 'page-link',\n      nextClassName: 'page-item',\n      nextLinkClassName: 'page-link' // activeClassName={'active'}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/adi/Documents/SCRAP-React/src/test.js"],"names":["React","Component","Link","axios","ReactPaginate","Test","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","receivedData","formatCurrency","num","hasil","toString","replace","isNaN","sign","Math","abs","floor","cents","i","length","substring","data","bind","get","then","res","slice","postData","map","pd","image","title","price","pageCount","ceil","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkEnBC,eAlEmB,GAkEDC,CAAC,IAAI;AACrB,YAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;AACA,YAAMC,MAAM,GAAGF,YAAY,GAAG,KAAKG,KAAL,CAAWC,OAAzC;AAEA,WAAKC,QAAL,CACE;AACEC,QAAAA,WAAW,EAAEN,YADf;AAEEE,QAAAA,MAAM,EAAEA;AAFV,OADF,EAKE,MAAM;AACJ,aAAKK,YAAL;AACD,OAPH;AASD,KA/EkB;;AAAA,SAkFnBC,cAlFmB,GAkFFC,GAAG,IAAI;AACtB,UAAIC,KAAK,GAAG,EAAZ;AAEAD,MAAAA,GAAG,GAAGA,GAAG,CAACE,QAAJ,GAAeC,OAAf,CAAuB,OAAvB,EAAgC,EAAhC,CAAN;AACA,UAAIC,KAAK,CAACJ,GAAD,CAAT,EAAgBA,GAAG,GAAG,GAAN;AAChB,UAAIK,IAAI,GAAGL,GAAG,MAAMA,GAAG,GAAGM,IAAI,CAACC,GAAL,CAASP,GAAT,CAAZ,CAAd;AACAA,MAAAA,GAAG,GAAGM,IAAI,CAACE,KAAL,CAAWR,GAAG,GAAG,GAAN,GAAY,aAAvB,CAAN;AACA,UAAIS,KAAK,GAAGT,GAAG,GAAG,GAAlB;AACAA,MAAAA,GAAG,GAAGM,IAAI,CAACE,KAAL,CAAWR,GAAG,GAAG,GAAjB,EAAsBE,QAAtB,EAAN;AACA,UAAIO,KAAK,GAAG,EAAZ,EAAgBA,KAAK,GAAG,MAAMA,KAAd;;AAChB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACE,KAAL,CAAW,CAACR,GAAG,CAACW,MAAJ,IAAc,IAAID,CAAlB,CAAD,IAAyB,CAApC,CAApB,EAA4DA,CAAC,EAA7D,EACEV,GAAG,GACDA,GAAG,CAACY,SAAJ,CAAc,CAAd,EAAiBZ,GAAG,CAACW,MAAJ,IAAc,IAAID,CAAJ,GAAQ,CAAtB,CAAjB,IACA,GADA,GAEAV,GAAG,CAACY,SAAJ,CAAcZ,GAAG,CAACW,MAAJ,IAAc,IAAID,CAAJ,GAAQ,CAAtB,CAAd,CAHF;;AAIF,aAAQT,KAAK,GAAGD,GAAhB;AACD,KAlGkB;;AAEjB,SAAKN,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,CADG;AAEXoB,MAAAA,IAAI,EAAE,EAFK;AAGXlB,MAAAA,OAAO,EAAE,CAHE;AAIXE,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMA,SAAKR,eAAL,GAAuB,KAAKA,eAAL,CAAqByB,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AACDhB,EAAAA,YAAY,GAAG;AACbd,IAAAA,KAAK,CACF+B,GADH,CAEK,kGAFL,EAIGC,IAJH,CAIQC,GAAG,IAAI;AACX,YAAMJ,IAAI,GAAGI,GAAG,CAACJ,IAAjB,CADW,CAEX;;AACA,YAAMK,KAAK,GAAGL,IAAI,CAACK,KAAL,CACZ,KAAKxB,KAAL,CAAWD,MADC,EAEZ,KAAKC,KAAL,CAAWD,MAAX,GAAoB,KAAKC,KAAL,CAAWC,OAFnB,CAAd;AAIA,YAAMwB,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAUC,EAAE,IAC3B,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,GAAG,EAAEA,EAAE,CAACC,KAFV;AAGE,QAAA,GAAG,EAAC,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CD,EAAE,CAACE,KAA/C,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQ,KAAKxB,cAAL,CAAoBsB,EAAE,CAACG,KAAvB,CAAR,CAFF,EAE6C,GAF7C,CADF,CALF,CANF,CADF,CADF,CADe,CAAjB;AAsCA,WAAK5B,QAAL,CAAc;AACZ6B,QAAAA,SAAS,EAAEnB,IAAI,CAACoB,IAAL,CAAUb,IAAI,CAACF,MAAL,GAAc,KAAKjB,KAAL,CAAWC,OAAnC,CADC;AAEZwB,QAAAA;AAFY,OAAd;AAID,KArDH;AAsDD;;AAmCDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAK7B,YAAL;AACD;;AACD8B,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKlC,KAAL,CAAWyB,QAAjC,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,MADjB;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,UAAU,EAAE,KAHd;AAIE,MAAA,cAAc,EAAE,WAJlB;AAKE,MAAA,SAAS,EAAE,KAAKzB,KAAL,CAAW+B,SALxB;AAME,MAAA,oBAAoB,EAAE,CANxB;AAOE,MAAA,kBAAkB,EAAE,CAPtB;AAQE,MAAA,YAAY,EAAE,KAAKpC,eARrB;AASE,MAAA,kBAAkB,EAAE,YATtB;AAUE,MAAA,qBAAqB,EAAE,kBAVzB;AAWE,MAAA,eAAe,EAAE,QAXnB,CAYE;AACA;AAbF;AAcE,MAAA,kBAAkB,EAAE,WAdtB,CAeE;AAfF;AAgBE,MAAA,aAAa,EAAE,WAhBjB;AAiBE,MAAA,iBAAiB,EAAE,WAjBrB;AAkBE,MAAA,iBAAiB,EAAE,WAlBrB;AAmBE,MAAA,qBAAqB,EAAE,WAnBzB;AAoBE,MAAA,aAAa,EAAE,WApBjB;AAqBE,MAAA,iBAAiB,EAAE,WArBrB,CAsBE;AAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AA+BD;;AAzIyC","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\n// import Hasil from './Hasil'\nimport './App.css';\n\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 8,\n      currentPage: 0\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n  receivedData() {\n    axios\n      .get(\n        `https://storage.scrapinghub.com/items/427748?apikey=470eb897efea4b36976d4989cc77c7e0&format=json`\n      )\n      .then(res => {\n        const data = res.data;\n        // console.log(res.data);\n        const slice = data.slice(\n          this.state.offset,\n          this.state.offset + this.state.perPage\n        );\n        const postData = slice.map(pd => (\n          <React.Fragment>\n            <div className='col-md-3 top'>\n              <div className='card scrap'>\n                <img\n                  className='card-img-top shop-item-image'\n                  src={pd.image}\n                  alt='Card cap'\n                />\n                <div className='card-body'>\n                  <h5 className='card-title shop-item-title'>{pd.title}</h5>\n                  <p className='card-text'>\n                    <a href='#'>EXPLORE NOW</a>\n                  </p>\n                  <div>\n                    <span className='shop-item-price'>\n                      {' '}\n                      <b>Rp. {this.formatCurrency(pd.price)}</b>{' '}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* <div className=\"col-sm-3 col-md-3\">\n                    <div className=\"thumbnail\">\n                        <img className=\"card-img-top shop-item-image\" src={pd.image} alt=\"Card cap\"/>\n                        <div className=\"caption\">\n                          <h5 className=\"card-title shop-item-title\">{pd.title}</h5>\n                          <span \nclassName=\"shop-item-price\"> <b>Rp. {this.formatCurrency(pd.price)}</b> </span>\n                          <button className=\"btn btn-outline-info\" type=\"button\">details</button>\n                        </div>\n                    </div>\n                </div> */}\n          </React.Fragment>\n        ));\n\n        this.setState({\n          pageCount: Math.ceil(data.length / this.state.perPage),\n          postData\n        });\n      });\n  }\n  handlePageClick = e => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState(\n      {\n        currentPage: selectedPage,\n        offset: offset\n      },\n      () => {\n        this.receivedData();\n      }\n    );\n  };\n\n  /* Fungsi formatRupiah */\n  formatCurrency = num => {\n    var hasil = '';\n\n    num = num.toString().replace(/\\Rp|/g, '');\n    if (isNaN(num)) num = '0';\n    var sign = num === (num = Math.abs(num));\n    num = Math.floor(num * 100 + 0.50000000001);\n    var cents = num % 100;\n    num = Math.floor(num / 100).toString();\n    if (cents < 10) cents = '0' + cents;\n    for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++)\n      num =\n        num.substring(0, num.length - (4 * i + 3)) +\n        '.' +\n        num.substring(num.length - (4 * i + 3));\n    return (hasil = num);\n  };\n\n  componentDidMount() {\n    this.receivedData();\n  }\n  render() {\n    //   console.log(this.state)\n    return (\n      <div className='container'>\n        <div className='row'>{this.state.postData}</div>\n        <div className='paginate'>\n          <ReactPaginate\n            previousLabel={'prev'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n            breakClassName={'page-item'}\n            pageCount={this.state.pageCount}\n            marginPagesDisplayed={5}\n            pageRangeDisplayed={5}\n            onPageChange={this.handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'}\n            //\n            // breakClassName={'page-item'}\n            breakLinkClassName={'page-link'}\n            // containerClassName={'pagination'}\n            pageClassName={'page-item'}\n            pageLinkClassName={'page-link'}\n            previousClassName={'page-item'}\n            previousLinkClassName={'page-link'}\n            nextClassName={'page-item'}\n            nextLinkClassName={'page-link'}\n            // activeClassName={'active'}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}