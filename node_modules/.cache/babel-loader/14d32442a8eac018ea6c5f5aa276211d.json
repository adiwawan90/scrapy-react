{"ast":null,"code":"import _objectSpread from \"/home/adi/Documents/SCRAP-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/adi/Documents/SCRAP-React/src/components/Pagination.js\";\nimport React, { Component } from 'react';\nimport paginate from 'paginate-array';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      size: 5,\n      page: 1,\n      currPage: null\n    };\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:4000/crawl.json?start_requests=true&spider_name=babastudio`).then(response => response.json()).then(todos => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            size = _this$state.size;\n      const currPage = paginate(todos, page, size);\n      this.setState(_objectSpread({}, this.state, {\n        todos,\n        currPage\n      }));\n    });\n  }\n\n  previousPage() {\n    const _this$state2 = this.state,\n          currPage = _this$state2.currPage,\n          page = _this$state2.page,\n          size = _this$state2.size,\n          todos = _this$state2.todos;\n\n    if (page > 1) {\n      const newPage = page - 1;\n      const newCurrPage = paginate(todos, newPage, size);\n      this.setState(_objectSpread({}, this.state, {\n        page: newPage,\n        currPage: newCurrPage\n      }));\n    }\n  }\n\n  nextPage() {\n    const _this$state3 = this.state,\n          currPage = _this$state3.currPage,\n          page = _this$state3.page,\n          size = _this$state3.size,\n          todos = _this$state3.todos;\n\n    if (page < 10) {\n      const newPage = page + 1;\n      const newCurrPage = paginate(todos, newPage, size);\n      this.setState(_objectSpread({}, this.state, {\n        page: newPage,\n        currPage: newCurrPage\n      }));\n    }\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          page = _this$state4.page,\n          size = _this$state4.size,\n          currPage = _this$state4.currPage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"page: \", page), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"size: \", size), currPage && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, currPage.data.map(todo => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, todo.title))), React.createElement(\"button\", {\n      onClick: this.previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Previous Page\"), React.createElement(\"button\", {\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Next Page\"));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/adi/Documents/SCRAP-React/src/components/Pagination.js"],"names":["React","Component","paginate","TodoList","constructor","props","state","todos","size","page","currPage","previousPage","bind","nextPage","componentDidMount","fetch","then","response","json","setState","newPage","newCurrPage","render","data","map","todo","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport paginate from 'paginate-array';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n      size: 5,\n      page: 1,\n      currPage: null\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:4000/crawl.json?start_requests=true&spider_name=babastudio`)\n      .then(response => response.json())\n      .then(todos => {\n        const { page, size } = this.state;\n\n        const currPage = paginate(todos, page, size);\n\n        this.setState({\n          ...this.state,\n          todos,\n          currPage\n        });\n      });\n  }\n\n  previousPage() {\n    const { currPage, page, size, todos } = this.state;\n\n    if (page > 1) {\n      const newPage = page - 1;\n      const newCurrPage = paginate(todos, newPage, size);\n\n      this.setState({\n        ...this.state,\n        page: newPage,\n        currPage: newCurrPage\n      });\n    }\n  }\n\n  nextPage() {\n    const { currPage, page, size, todos } = this.state;\n\n    if (page < 10) {\n      const newPage = page + 1;\n      const newCurrPage = paginate(todos, newPage, size);\n      this.setState({ ...this.state, page: newPage, currPage: newCurrPage });\n    }\n  }\n\n  render() {\n    const { page, size, currPage } = this.state;\n\n    return (\n      <div>\n        <div>page: {page}</div>\n        <div>size: {size}</div>\n        {currPage &&\n          <ul>\n            {currPage.data.map(todo => <li>{todo.title}</li>)}\n          </ul>\n        }\n        <button onClick={this.previousPage}>Previous Page</button>\n        <button onClick={this.nextPage}>Next Page</button>\n      </div>\n    )\n  }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}